{"version":3,"sources":["TimeSetter.tsx","DateSetter.tsx","BookingPage.tsx","CheckinPage.tsx","TopBar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["TimeSetter","title","useState","timeValue","setTimeValue","Card","CardContent","Typography","variant","LocalizationProvider","dateAdapter","AdapterDateFns","TimePicker","value","onChange","newValue","renderInput","params","TextField","DateSetter","Date","dateValue","setDateValue","StaticDatePicker","orientation","openTo","BookingPage","Grid","container","spacing","item","xs","CheckinPage","deskId","document","location","search","substr","currentDeskState","setCurrentDeskState","useEffect","setInitialDeskState","a","fetch","process","data","json","deskState","handleToggleChecked","method","headers","body","JSON","stringify","className","Button","color","disabled","onClick","TopBar","AppBar","position","Toolbar","component","sx","flexGrow","IconButton","size","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.377e9fa7.chunk.js","sourcesContent":["import { useState, FC } from \"react\";\nimport { Typography, Card, CardContent, TextField } from \"@mui/material\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport { LocalizationProvider, TimePicker } from \"@mui/lab\";\n\ntype Props = {\n  title: string;\n};\nexport const TimeSetter: FC<Props> = ({ title }) => {\n  const [timeValue, setTimeValue] = useState<Date | null>(null);\n  return (\n    <Card>\n      <CardContent>\n        <Typography variant=\"body2\">{title}</Typography>\n        <LocalizationProvider dateAdapter={AdapterDateFns}>\n          <TimePicker\n            value={timeValue}\n            onChange={(newValue) => {\n              setTimeValue(newValue);\n            }}\n            renderInput={(params) => <TextField {...params} />}\n          />\n        </LocalizationProvider>\n      </CardContent>\n    </Card>\n  );\n};\n\n\n","import { useState, FC } from \"react\";\nimport { TextField } from \"@mui/material\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport { LocalizationProvider, StaticDatePicker } from \"@mui/lab\";\n\nexport const DateSetter: FC = () => {\n    const [dateValue, setDateValue] = useState<Date | null>(new Date());\n    return (\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\n        <StaticDatePicker<Date>\n          orientation=\"portrait\"\n          openTo=\"day\"\n          value={dateValue}\n          onChange={(newValue) => {\n            setDateValue(newValue);\n          }}\n          renderInput={(params) => <TextField {...params} />}\n        />\n      </LocalizationProvider>\n    );\n  };","import React, { FC } from \"react\";\nimport { Grid } from \"@mui/material\";\nimport { TimeSetter} from \"./TimeSetter\";\nimport {DateSetter} from \"./DateSetter\"\n\nconst BookingPage: FC = () => {\n  return (\n    <div>\n      <Grid container spacing={2}>\n        <Grid item xs={4}>\n          <h3>list desks</h3>\n        </Grid>\n        <Grid item xs={8}>\n          <h3>layout picture</h3>\n          <Grid container spacing={2}>\n            <Grid item xs={6}>\n              <DateSetter />\n            </Grid>\n            <Grid item xs={6}>\n              <TimeSetter title={\"Start time\"} />\n              <TimeSetter title={\"End Time\"} />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\nexport default BookingPage;\n","import Button from \"@mui/material/Button\";\nimport React, { useState, FC, useEffect } from \"react\";\n\nconst CheckinPage: FC = () => {\n  const deskId = document.location.search.substr(1);\n  const [currentDeskState, setCurrentDeskState] = useState(\"free\");\n\n  \n  useEffect(() => {\n    const setInitialDeskState = async () => {\n      const data = await fetch(`${process.env.REACT_APP_ROOT_URL}api/desk/${deskId}`);\n      const json = await data.json();\n      setCurrentDeskState(json.deskState);\n    };\n    setInitialDeskState();\n  }, [deskId]);\n\n  const handleToggleChecked = async () => {\n    const data = await fetch(`${process.env.REACT_APP_ROOT_URL}api/desk/${deskId}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n      },\n      body: JSON.stringify({\n        deskState: currentDeskState,\n        deskId: deskId,\n      }),\n    });\n    const json = await data.json();\n    setCurrentDeskState(json.deskState);\n  };\n\n  return (\n    <div className=\"CheckinPage\">\n      <header className=\"checkinHeader\">\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          disabled={currentDeskState === \"unavailable\"}\n          onClick={handleToggleChecked}\n        >\n          check in/ uit\n        </Button>\n\n        {currentDeskState === \"free\" ? \"uitgechecked\" : \"ingechecked\"}\n      </header>\n    </div>\n  );\n};\n\nexport default CheckinPage;\n","import { Toolbar, IconButton, AppBar, Typography } from \"@mui/material\";\nimport AccountBoxIcon from \"@mui/icons-material/AccountBox\";\n\nfunction TopBar() {\n  return (\n    <AppBar position=\"static\">\n      <Toolbar variant=\"dense\">\n        <Typography\n          variant=\"h6\"\n          color=\"inherit\"\n          component=\"div\"\n          sx={{ flexGrow: 1 }}\n        >\n          Username\n        </Typography>\n        <IconButton size=\"large\" color=\"inherit\">\n          <AccountBoxIcon />\n        </IconButton>\n      </Toolbar>\n    </AppBar>\n  );\n}\nexport default TopBar;\n","import './App.css';\nimport BookingPage from './BookingPage';\nimport CheckinPage from './CheckinPage';\nimport TopBar from './TopBar';\nimport {Route} from 'react-router-dom'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TopBar/>\n      <Route path=\"/desks/book\" component={BookingPage}/>\n      <Route path=\"/desks/checkin\" component={CheckinPage}/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}