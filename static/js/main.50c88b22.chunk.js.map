{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","deskId","document","location","search","substr","useState","currentDeskState","setCurrentDeskState","className","id","onClick","fetch","method","headers","body","JSON","stringify","deskState","then","data","json","console","log","href","target","rel","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"8LAmDeA,MAhDf,WACE,IAAMC,EAASC,SAASC,SAASC,OAAOC,OAAO,GAC/C,EAAgDC,oBAAS,GAAzD,mBAAOC,EAAP,KAAyBC,EAAzB,KAwBA,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UAEE,wBAAQC,GAAG,SAASC,QAzBE,WAC1BC,MAAM,kCAAD,OAAmCX,GAAS,CAE/CY,OAAQ,QACRC,QAAS,CACP,eAAgB,mCAElBC,KAAMC,KAAKC,UAAU,CACnBC,WAAaX,EACbN,OAASA,MAGZkB,MAAK,SAACC,GAAD,OAAUA,EAAKC,UACpBF,MAAK,SAACC,GACPE,QAAQC,IAAIP,KAAKC,UAAUG,IAC3BZ,EAAoBY,EAAKF,eAUrB,2BACCX,EAAmB,cAAgB,eACpC,sCACO,+CADP,0BAGA,mBACEE,UAAU,WACVe,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,+BCxBOC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFnC,SAASoC,eAAe,SAM1BX,K","file":"static/js/main.50c88b22.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nfunction App() {\n  const deskId = document.location.search.substr(1);\n  const [currentDeskState, setCurrentDeskState] = useState(false);\n  //is it usefull to also store the state here?\n\n  const handleToggleChecked = ()=>{\n    fetch(`http://localhost:3001/api/desk/${deskId}`,{\n      //can also be a PUT method\n      method: 'PATCH',\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      },\n      body: JSON.stringify({\n        deskState : !currentDeskState,\n        deskId : deskId\n      })\n    })\n    .then((data) => data.json())\n    .then((data) => {\n    console.log(JSON.stringify(data))\n    setCurrentDeskState(data.deskState);\n    // document.getElementById(\n    //     \"text\"\n    //   ).innerHTML = data.deskState ? 'ingechecked' : 'uitgechecked';\n  });\n  }\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n        <button id=\"button\" onClick={handleToggleChecked}>check in/ uit</button>\n        {currentDeskState ? 'ingechecked' : 'uitgechecked'}\n        <p>\n          Edit <code>src/App.tsx</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}